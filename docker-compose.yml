version: '3.8'

services:
  logging-server:
    # Use Docker Hub image (or build from source with 'build: .')
    image: rejavarti/rejavartis_logging_server:latest
    # Uncomment below to build from source instead of pulling from Docker Hub
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    
    container_name: rejavarti-logging-server
    restart: unless-stopped
    
    # Port mapping
    ports:
      - "10180:10180"
    
    # Volume mounts for persistent data
    # Windows paths - change these to your preferred location
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      # SSL certificates (optional - only if using HTTPS)
      # Place cert.pem and key.pem in this directory
      - ./ssl:/app/ssl:ro
      # For Linux/Unraid, use these paths instead:
      # - /mnt/user/appdata/logging-server/data:/app/data
      # - /mnt/user/appdata/logging-server/logs:/app/logs
      # - /mnt/user/appdata/logging-server/ssl:/app/ssl:ro
      # - /etc/localtime:/etc/localtime:ro
    
    # Environment variables
    environment:
      # Node.js environment (production/development)
      - NODE_ENV=production
      
      # Application port (must match container port above)
      - PORT=10180
      
      # Timezone for log timestamps (change to your timezone)
      # Examples: America/New_York, Europe/London, Asia/Tokyo
      - TZ=America/Denver
      
      # Default authentication credentials
      # ⚠️ CHANGE THESE BEFORE PRODUCTION USE!
      - AUTH_USERNAME=admin
      - AUTH_PASSWORD=ChangeMe123!
      
      # HTTPS/SSL Configuration (optional)
      # Set to 'true' to enable HTTPS (requires SSL certificates in /ssl directory)
      - USE_HTTPS=false
      # SSL certificate and key paths (only needed if USE_HTTPS=true)
      # - SSL_CERT_PATH=/app/ssl/cert.pem
      # - SSL_KEY_PATH=/app/ssl/key.pem
    
    # Resource limits (adjust based on your server)
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    
    # Health check for monitoring
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:10180/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    
    # Container logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Labels for organization (optional)
    labels:
      - "com.rejavarti.logging-server.version=1.1.0"
      - "com.rejavarti.logging-server.description=Enterprise Logging Platform with HTTP/HTTPS Support"

# Network configuration
networks:
  default:
    name: logging-network